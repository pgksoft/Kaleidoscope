<UserControl x:Class="Kaleidoscope.View.Content"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mtdsgn="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:Kaleidoscope.View"
             xmlns:helpers="clr-namespace:Kaleidoscope.Helpers"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:model="clr-namespace:Kaleidoscope.Model"
             xmlns:viewmodel="clr-namespace:Kaleidoscope.ViewModel"
             x:Name="MyUserControl"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="700">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <helpers:VisibilityPopupBoxFromImageSizeConverter x:Key="ConverterVisibilityPopupBoxList"></helpers:VisibilityPopupBoxFromImageSizeConverter>

            <Style x:Key="ImagePopupBox" TargetType="mtdsgn:PopupBox" BasedOn="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}">
                <Setter Property="Width" Value="32"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Opacity" Value="0.68"/>
                <Setter Property="Margin"  Value="8" />
                <Setter Property="PopupMode" Value="MouseOver" />
                <Setter Property="PlacementMode" Value="BottomAndAlignCentres" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>

            <Style x:Key="ContentButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionMiniAccentButton}">
                <Setter Property="Width" Value="28"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="Margin" Value="0 0 0 3"/>
                <Setter Property="Padding" Value="0"/>
            </Style>

            <Style x:Key="ContentButtonFullScreenList" TargetType="Button" BasedOn="{StaticResource ContentButton}">
                <Setter Property="Visibility" Value="Visible"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=MyUserControl, Path=DataContext.IsFullScreen}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ContentButtonFullScreenOneFromList" TargetType="Button" BasedOn="{StaticResource ContentButton}">
                <Setter Property="Visibility" Value="Visible"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsFullScreen}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <!-- Панель ProgressBar -->
            <RowDefinition Height="Auto"/>
            <!-- Панель КОНТЕНТА -->
            <RowDefinition Height="*"/>
            <!-- Панель резервная -->
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Панель ProgressBar -->
        <Grid Grid.Row="0" Visibility="{Binding PanelProgressVisibility, Mode=OneWay}" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ProgressBar Grid.Column="0" Height="10" Margin="8 0" VerticalAlignment="Center"
                         IsIndeterminate="{Binding IsIndeterminateProgress}"
                         Maximum="{Binding ItemsCount}"
                         Value="{Binding ValueProgress}" />
            <TextBlock Grid.Column="1" Margin="0 0 8 0"
                       Style="{StaticResource MaterialDesignSubheadingTextBlock}"
                       Text="{Binding ProgressCaption}" />
        </Grid>

        <!-- Панель КОНТЕНТА -->
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <!-- Панель Изображений -->
                <RowDefinition Height="{Binding PanelImagesHeight}"/>
                <!-- Панель Видео -->
                <RowDefinition Height="{Binding PanelVideoHeight}"/>
            </Grid.RowDefinitions>

            <!-- Панель Изображений -->
            <Grid Grid.Row="0" Visibility="{Binding PanelImagesVisibility}">
                <Grid.RowDefinitions>
                    <!-- Type Show: List -->
                    <RowDefinition Height="{Binding PanelImagesModeShowListHeight}" />
                    <!-- Type Show: One from List -->
                    <RowDefinition Height="{Binding PanelImagesModeShowOneFromListHeight}"/>
                </Grid.RowDefinitions>

                <!-- Панель изображений Mode Show: List -->
                <Grid Grid.Row="0" Visibility="{Binding PanelImageModeShowListVisibility}">
                    <ListBox ItemsSource="{Binding ImageContents, IsAsync=True}" 
                             Name="ImagesList" SelectionMode="Single"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             Margin="0" Padding="0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding ImagesListMouseDoubleClickCommand}"
                                                       CommandParameter="{Binding ElementName=ImagesList, Path=SelectedItem}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ImagesListSelectionChangedCommand}"
                                                       CommandParameter="{Binding ElementName=ImagesList, Path=SelectedItems}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="model:ListContent">

                                <Grid>

                                    <Border Name="BorderItem" 
                                            Width="{Binding Source={StaticResource ContentViewDepProp}, Path=Instance.FoldersImageBorderWidth}" 
                                            Height="{Binding Source={StaticResource ContentViewDepProp}, Path=Instance.FoldersImageBorderHeight}" 
                                            Margin="3" Padding="3" CornerRadius="3"
                                            BorderThickness="1" BorderBrush="{DynamicResource MaterialDesignSelection}">
                                        <Image Name="ImageItem" Source="{Binding ImageBitmap}" Stretch="Uniform">
                                            <Image.LayoutTransform>
                                                <RotateTransform Angle="{Binding NRotate}"/>
                                            </Image.LayoutTransform>
                                        </Image>
                                    </Border>

                                    <mtdsgn:PopupBox >
                                        <mtdsgn:PopupBox.Style>
                                            <Style TargetType="mtdsgn:PopupBox" BasedOn="{StaticResource ImagePopupBox}">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="True"/>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True"/>
                                                            <Condition Binding="{Binding ElementName=BorderItem, Path=Height, Converter={StaticResource ConverterVisibilityPopupBoxList}}" Value="True"/>
                                                            <Condition Binding="{Binding ElementName=BorderItem, Path=Width, Converter={StaticResource ConverterVisibilityPopupBoxList}}" Value="True"/>
                                                            <Condition Binding="{Binding ElementName=MyUserControl, Path=DataContext.IsMarkingImage}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </mtdsgn:PopupBox.Style>
                                        <StackPanel Opacity="0.68" Width="50">
                                            <Button Style="{StaticResource ContentButton}"
                                                    Command="{Binding ElementName=MyUserControl, Path=DataContext.RotateRightCommand}" 
                                                    CommandParameter="{Binding ElementName=ImagesList, Path=SelectedItem}"
                                                    ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonRotateRight]}">
                                                <mtdsgn:PackIcon Kind="RotateRightVariant"/>
                                            </Button>
                                            <Button Style="{StaticResource ContentButton}" 
                                                    Command="{Binding ElementName=MyUserControl, Path=DataContext.RotateLeftCommand}" 
                                                    CommandParameter="{Binding ElementName=ImagesList, Path=SelectedItem}"
                                                    ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonRotateLeft]}">
                                                <mtdsgn:PackIcon Kind="RotateLeftVariant"/>
                                            </Button>
                                            <Button Style="{StaticResource ContentButton}"
                                                    Command="{Binding ElementName=MyUserControl, Path=DataContext.ImageMarkCommand}" 
                                                    CommandParameter="{Binding ElementName=ImagesList, Path=SelectedItem}"
                                                    ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonMarked]}">
                                                <mtdsgn:PackIcon Kind="CheckboxMarkedCircleOutline"/>
                                            </Button>
                                            <Button Style="{StaticResource ContentButton}"
                                                    ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonProperty]}">
                                                <mtdsgn:PackIcon Kind="InformationVariant"/>
                                            </Button>
                                            <Button Style="{StaticResource ContentButtonFullScreenList}"
                                                    ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonFullscreen]}">
                                                <mtdsgn:PackIcon Kind="Fullscreen"/>
                                            </Button>
                                        </StackPanel>
                                    </mtdsgn:PopupBox>

                                    <Border Margin="8" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                            CornerRadius="16" Background="{DynamicResource SecondaryAccentBrush}"
                                            Opacity="0.68" Width="32" Height="32">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=MyUserControl, Path=DataContext.IsMarkingImage}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <mtdsgn:PackIcon Foreground="{DynamicResource SecondaryAccentForegroundBrush}" 
                                                         VerticalAlignment="Center" HorizontalAlignment="Center"
                                                         Height="28" Width="28">
                                            <mtdsgn:PackIcon.Style>
                                                <Style TargetType="mtdsgn:PackIcon">
                                                    <Setter Property="Kind" Value="CheckboxBlankCircleOutline"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsMarked}" Value="True">
                                                            <Setter Property="Kind" Value="CheckCircleOutline"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </mtdsgn:PackIcon.Style>
                                        </mtdsgn:PackIcon>
                                    </Border>

                                </Grid>

                                <DataTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="BorderItem" Property="BorderBrush" Value="{DynamicResource SecondaryAccentBrush}"/>
                                        <Setter TargetName="BorderItem" Property="BorderThickness" Value="2"/>
                                        <Setter TargetName="BorderItem" Property="Padding" Value="2"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                                        <Setter TargetName="BorderItem" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>

                            </DataTemplate>
                        </ListBox.ItemTemplate>

                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel IsItemsHost="True" Orientation="Horizontal"  />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                    </ListBox>
                    
                    <mtdsgn:Badged Margin="8 20 8 8" VerticalAlignment="Top" HorizontalAlignment="Left" 
                                   Opacity="0.68" Badge="{Binding CountMarkedImagesList}">
                        <mtdsgn:Badged.Style>
                            <Style TargetType="mtdsgn:Badged">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMarkingImage}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </mtdsgn:Badged.Style>

                        <mtdsgn:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}" 
                                         PopupMode="MouseOver" PlacementMode="BottomAndAlignCentres">
                            <StackPanel Opacity="0.68">
                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Margin="0 0 0 5"
                                        Command="{Binding MarkAllImageListCommand}"
                                        ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonMarkedAll]}">
                                    <mtdsgn:PackIcon Kind="CheckboxMultipleMarkedCircleOutline" Width="28" Height="28"/>
                                </Button>
                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Margin="0 0 0 5"
                                        Command="{Binding CancelAllMarkImageListCommand}"
                                        ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonMarkedCancelAll]}">
                                    <mtdsgn:PackIcon Kind="CheckboxMultipleBlankCircleOutline" Width="28" Height="28"/>
                                </Button>
                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Margin="0 0 0 5"
                                        Command="{Binding InvertMarkImageListCommand}"
                                        ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonMarkedInverse]}">
                                    <mtdsgn:PackIcon Kind="CheckboxMultipleMarkedCircle" Width="28" Height="28"/>
                                </Button>
                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Margin="0 0 0 5"
                                        Command="{Binding RotateRightImageListMarksCommand}"
                                        ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonRotateRight]}">
                                    <mtdsgn:PackIcon Kind="RotateRightVariant" Width="28" Height="28"/>
                                </Button>
                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Margin="0 0 0 5"
                                        Command="{Binding RotateLeftImageListMarksCommand}"
                                        ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonRotateLeft]}">
                                    <mtdsgn:PackIcon Kind="RotateLeftVariant" Width="28" Height="28"/>
                                </Button>
                            </StackPanel>
                        </mtdsgn:PopupBox>
                        
                    </mtdsgn:Badged>
                </Grid>

                <!-- Панель изображений Type Show: One from List -->
                <Grid Grid.Row="1" Visibility="{Binding PanelImageModeShowOneFromListVisibility}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="15*"/>
                    </Grid.ColumnDefinitions>
                    <!-- Изображение из списка -->
                    <Grid Grid.Column="0" Name="GridImage">
                        <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <Image Name="Picture" Source="{Binding ElementName=ImagesOneFromList, Path=SelectedItem.FullName}" Stretch="Uniform"
                                   Width="{Binding WidthImageOneFromList}" Height="{Binding HeightImageOneFromList}">
                                <Image.LayoutTransform>
                                    <RotateTransform Angle="{Binding ElementName=ImagesOneFromList, Path=SelectedItem.NRotate}"/>
                                </Image.LayoutTransform>
                            </Image>
                        </ScrollViewer>
                        <mtdsgn:PopupBox >
                            <mtdsgn:PopupBox.Style>
                                <Style TargetType="mtdsgn:PopupBox" BasedOn="{StaticResource ImagePopupBox}">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=GridImage, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=Picture, Path=Source}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </mtdsgn:PopupBox.Style>
                            <StackPanel Opacity="0.68">
                                <Button Style="{StaticResource ContentButton}" 
                                        Command="{Binding RotateRightCommand}" 
                                        CommandParameter="{Binding ElementName=ImagesOneFromList, Path=SelectedItem}"
                                        ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonRotateRight]}">
                                    <mtdsgn:PackIcon Kind="RotateRightVariant"/>
                                </Button>
                                <Button Style="{StaticResource ContentButton}" 
                                        Command="{Binding RotateLeftCommand}" 
                                        CommandParameter="{Binding ElementName=ImagesOneFromList, Path=SelectedItem}"
                                        ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonRotateLeft]}">
                                    <mtdsgn:PackIcon Kind="RotateLeftVariant"/>
                                </Button>
                                <Button Style="{StaticResource ContentButton}"
                                        ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonProperty]}">
                                    <mtdsgn:PackIcon Kind="InformationVariant"/>
                                </Button>
                                <Button Style="{StaticResource ContentButtonFullScreenOneFromList}"
                                        ToolTip="{Binding Source={StaticResource helper}, Path=[ImagesRes.PopupBoxButtonFullscreen]}">
                                    <mtdsgn:PackIcon Kind="Fullscreen"/>
                                </Button>
                            </StackPanel>
                        </mtdsgn:PopupBox>
                    </Grid>

                    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch"
                                  Style="{StaticResource MaterialDesignGridSplitter}"/>
                    <!-- Список изображений - правая панель -->
                    <ListBox Name="ImagesOneFromList" Grid.Column="2"  ItemsSource="{Binding ImageContents, IsAsync=True}" 
                             Style="{StaticResource MaterialDesignListBox}"
                             SelectedIndex="{Binding SelectedIndexImageOneToList}" 
                             Margin="0" Padding="0">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Padding" Value="0"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="model:ListContent">

                                <Border Name="BorderItem" 
                                        Margin="3" Padding="3" CornerRadius="3"
                                        BorderThickness="1" BorderBrush="{DynamicResource MaterialDesignSelection}">

                                    <Image Name="ImageItem" Source="{Binding ImageBitmap}" Stretch="Uniform">
                                        <Image.LayoutTransform>
                                            <RotateTransform Angle="{Binding NRotate}"/>
                                        </Image.LayoutTransform>
                                    </Image>

                                </Border>

                                <DataTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="BorderItem" Property="BorderBrush" Value="{DynamicResource SecondaryAccentBrush}"/>
                                        <Setter TargetName="BorderItem" Property="BorderThickness" Value="2"/>
                                        <Setter TargetName="BorderItem" Property="Padding" Value="2"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                                        <Setter TargetName="BorderItem" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel IsItemsHost="True" Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                    </ListBox>

                </Grid>

            </Grid>
            <!-- Панель Изображений-окончание -->

            <!-- Панель Видео -->
            <Grid Grid.Row="1" Visibility="{Binding PanelVideosVisibility}">
                <Grid.RowDefinitions>
                    <!-- Type Show: List -->
                    <RowDefinition Height="{Binding PanelVideoModeShowListHeight}"/>
                    <!-- Type Show: One from List -->
                    <RowDefinition Height="{Binding PanelVideoModeShowOneFromListHeight}"/>
                </Grid.RowDefinitions>

                <!-- Панель Видео Mode Show: List -->
                <Grid Grid.Row="0" Visibility="{Binding PanelVideoModeShowListVisibility}">
                    
                </Grid>

                <!-- Панель Видео Type Show: One from List -->
                <Grid Grid.Row="1" Visibility="{Binding PanelVideoModeShowOneFromListVisibility}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="20*"/>
                    </Grid.ColumnDefinitions>
                    <!-- Own Video One From List -->
                    <Grid Grid.Column="0" Name="GridVideoOneFromList">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer Grid.Row="0" Name="ScrViewMedia" 
                                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                                <ScrollViewer.Style>
                                    <Style TargetType="ScrollViewer">
                                        <Setter Property="Margin" Value="0"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=ScrViewMedia, Path=ComputedHorizontalScrollBarVisibility}" Value="Visible">
                                                <Setter Property="Margin" Value="0 0 0 15"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Style>
                                <!--LoadedBehavior="{Binding ElementName=VideosOneFromList, Path=SelectedItem.LoadedBehavior}"-->
                                <!--Width="{Binding WidthVideoOneFromList}" Height="{Binding HeightVideoOneFromList}"-->
                                <MediaElement Name="VideoItemOneFromList" 
                                              Source="{Binding ElementName=VideosOneFromList, Path=SelectedItem.FullName}" 
                                              Stretch="Uniform" ScrubbingEnabled ="True" 
                                              LoadedBehavior="{Binding ElementName=VideosOneFromList, Path=SelectedItem.LoadedBehavior}"
                                              UnloadedBehavior="Stop" 
                                              Width="{Binding WidthVideoOneFromList}" Height="{Binding HeightVideoOneFromList}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MediaOpened">
                                            <i:InvokeCommandAction Command="{Binding VideoItemOneFromListOpenedCommand}"
                                                                   CommandParameter="{Binding ElementName=VideoItemOneFromList}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="MediaEnded">
                                            <i:InvokeCommandAction Command="{Binding VideoItemOneFromListEndedCommand}"
                                                                   CommandParameter="{Binding ElementName=VideoItemOneFromList}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding VideoItemOneFromListMouseLeftButtonDownCommand}"
                                                                   CommandParameter="{Binding ElementName=VideoItemOneFromList}"/>
                                        </i:EventTrigger>                                    
                                    </i:Interaction.Triggers>
                                </MediaElement>
                            </ScrollViewer>

                            <Slider Grid.Row="0" Name="SliderVideoOneFromList" Style="{StaticResource MaterialDesignDiscreteSlider}"
                                    Orientation="Horizontal" VerticalAlignment="Bottom" IsMoveToPointEnabled="True" 
                                    Minimum="0" Maximum="{Binding ElementName=VideosOneFromList, Path=SelectedItem.VideoLengthSec}" 
                                    Visibility="{Binding ElementName=PanelControlVideoOneFromList, Path=Visibility}"
                                    Value="{Binding SliderPositionVideoOneToList}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Thumb.DragStarted">
                                        <i:InvokeCommandAction Command="{Binding ElementName=MyUserControl, Path=DataContext.SliderOneFromListThumbDragStartedCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Thumb.DragCompleted">
                                        <i:InvokeCommandAction Command="{Binding ElementName=MyUserControl, Path=DataContext.SliderOneFromListThumbDragCompletedCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Slider>

                            <StackPanel Grid.Row="1" Name="PanelControlVideoOneFromList" >
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="Orientation" Value="Horizontal"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=VideosOneFromList, Path=SelectedItem}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                
                                <ToggleButton Style="{StaticResource MaterialDesignActionToggleButton}" Margin="8 0"
                                              Background="Transparent" Foreground="{DynamicResource SecondaryAccentBrush}" 
                                              IsChecked="{Binding ElementName=VideosOneFromList, Path=SelectedItem.IsPlay}">
                                    <ToggleButton.Content>
                                        <mtdsgn:PackIcon Kind="Pause" Width="26" Height="26" />
                                    </ToggleButton.Content>
                                    <mtdsgn:ToggleButtonAssist.OnContent>
                                        <mtdsgn:PackIcon Kind="Play" Width="26" Height="26" />
                                    </mtdsgn:ToggleButtonAssist.OnContent>
                                </ToggleButton>

                                <TextBlock Margin="8 0" VerticalAlignment="Center"
                                           Text="{Binding ElementName=VideosOneFromList, Path=SelectedItem.CaptionVideoPlace}"/>

                                <!--<TextBlock Margin="8 0" VerticalAlignment="Center"
                                           Text="{Binding ElementName=VideosOneFromList, Path=SelectedItem.SliderDragStarted}"/>-->

                            </StackPanel>
                        </Grid>
                    </Grid>

                    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch"
                                  Style="{StaticResource MaterialDesignGridSplitter}"/>
                        
                    <!-- List Image of Video. Mode = One From List -->
                    <ListBox Name="VideosOneFromList" Grid.Column="2"  ItemsSource="{Binding VideoContents, IsAsync=True}" 
                             SelectionMode="Single"
                             Style="{StaticResource MaterialDesignListBox}"
                             SelectedIndex="{Binding SelectedIndexVideoOneToList}" 
                             Margin="0" Padding="0">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Padding" Value="0"/>
                            </Style>
                        </ListBox.ItemContainerStyle>

                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="model:ListContent">

                                <Border Name="BorderItem" 
                                        Margin="3" Padding="3" CornerRadius="3"
                                        BorderThickness="1" BorderBrush="{DynamicResource MaterialDesignSelection}">
                                    <Grid>
                                        <Image Name="VideoImage" Source="{Binding ImageBitmap}" Stretch="Uniform"
                                               ToolTip="{Binding ShortDescription}">
                                        </Image>
                                        <mtdsgn:PackIcon Kind="MovieRoll" Width="32" Height="32" Opacity="0.5" Margin="5"
                                                         Foreground="{DynamicResource MaterialDesignSelection}"
                                                         VerticalAlignment="Top" HorizontalAlignment="Right"/>
                                        <Border VerticalAlignment="Bottom" HorizontalAlignment="Stretch"
                                                Margin="2" Padding="8 1" CornerRadius="3" Opacity="0.5"
                                                Background="{DynamicResource SecondaryAccentBrush}">
                                            <TextBlock Text="{Binding VideoLength}" HorizontalAlignment="Right"
                                                       Foreground="{DynamicResource SecondaryAccentForegroundBrush}" FontWeight="Medium"/>
                                        </Border>
                                    </Grid>
                                </Border>

                                <DataTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="BorderItem" Property="BorderBrush" Value="{DynamicResource SecondaryAccentBrush}"/>
                                        <Setter TargetName="BorderItem" Property="BorderThickness" Value="2"/>
                                        <Setter TargetName="BorderItem" Property="Padding" Value="2"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                                        <Setter TargetName="BorderItem" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel IsItemsHost="True" Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                    </ListBox>

                </Grid>

            </Grid>
            <!-- Панель Видео-окончание -->

        </Grid>
        <!-- Панель КОНТЕНТА-окончание -->

        <!-- Панель резервная -->

    </Grid>
</UserControl>
